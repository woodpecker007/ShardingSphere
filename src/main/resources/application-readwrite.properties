# 内存模式
spring.shardingsphere.mode.type=Memory

# 配置真实数据源
spring.shardingsphere.datasource.names=master,slave1,slave2

# 配置第 1 个数据源
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://127.0.0.1:3306/aurora?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456

# 配置第 2 个数据源
spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://127.0.0.1:3307/aurora?allowPublicKeyRetrieval=true&useSSL=false
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456

# 配置第 3 个数据源
spring.shardingsphere.datasource.slave2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.slave2.jdbc-url=jdbc:mysql://127.0.0.1:3308/aurora?allowPublicKeyRetrieval=true&useSSL=false
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456

# 读写分离类型，如: Static，Dynamic
spring.shardingsphere.rules.readwrite-splitting.data-sources.aurora.type=Static
# 写数据源名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.aurora.props.write-data-source-name=master
# 读数据源名称，多个从数据源用逗号分隔
spring.shardingsphere.rules.readwrite-splitting.data-sources.aurora.props.read-data-source-names=slave1,slave2

# 负载均衡算法名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.aurora.load-balancer-name=aurora_round

# 负载均衡算法配置，此配置对多slave情况有效，有三种负载算法可以选择，
# 1.ROUND_ROBIN（轮询）2.RANDOM（随机）3.WEIGHT（权重，使用中的从库必须配置权重）
spring.shardingsphere.rules.readwrite-splitting.load-balancers.aurora_round.type=ROUND_ROBIN
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.aurora_random.type=RANDOM
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.aurora_weight.type=WEIGHT
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.aurora_weight.props.slave1=1
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.aurora_weight.props.slave2=3

# 打印SQl
spring.shardingsphere.props.sql-show=true