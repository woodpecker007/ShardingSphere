# horizontal2分库分表配置

# 配置真实数据源
spring.shardingsphere.datasource.names=server-driver0, server-driver1

# 配置第 1 个数据源，数据库db_driver_0
spring.shardingsphere.datasource.server-driver0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-driver0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-driver0.jdbc-url=jdbc:mysql://127.0.0.1:3301/db_driver_0?allowPublicKeyRetrieval=true&useSSL=false
spring.shardingsphere.datasource.server-driver0.username=root
spring.shardingsphere.datasource.server-driver0.password=123456

# 配置第 2 个数据源，数据库db_driver_1
spring.shardingsphere.datasource.server-driver1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-driver1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-driver1.jdbc-url=jdbc:mysql://127.0.0.1:3301/db_driver_1?allowPublicKeyRetrieval=true&useSSL=false
spring.shardingsphere.datasource.server-driver1.username=root
spring.shardingsphere.datasource.server-driver1.password=123456

# ============== 标准分片表配置（数据节点）==============
# spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes=值
# 值由数据源名 + 表名组成，以小数点分隔。
# <table-name>：逻辑表名
#spring.shardingsphere.rules.sharding.tables.new_driver_.actual-data-nodes=server-driver.new_driver_0,server-driver.new_driver_1
# 表达式语法
spring.shardingsphere.rules.sharding.tables.new_driver_.actual-data-nodes=server-driver$->{0..1}.new_driver_$->{0..1}


# ============== 分库策略 ==============
# 分片列名称
spring.shardingsphere.rules.sharding.tables.new_driver_.database-strategy.standard.sharding-column=user_id
# 分片算法名称
spring.shardingsphere.rules.sharding.tables.new_driver_.database-strategy.standard.sharding-algorithm-name=alg_mod

# ============== 分片算法配置 ==============
# 行表达式分片算法
# 分片算法类型
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.type=INLINE
# 分片算法属性配置
#spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.props.algorithm-expression=server-order$->{user_id % 2}

# 取模分片算法，和上面行表达式分片算法二选一
# 分片算法类型
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
# 分片算法属性配置
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2


# ============== 分表策略 ==============
# 分片列名称，数据库表的字段，不是java实体对象中的字段
spring.shardingsphere.rules.sharding.tables.new_driver_.table-strategy.standard.sharding-column=licence_no
# 分片算法名称
spring.shardingsphere.rules.sharding.tables.new_driver_.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

# ============== 分片算法配置 ==============
# 哈希取模分片算法
# 分片算法类型
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD
# 分片算法属性配置
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2

# 打印SQL
spring.shardingsphere.props.sql-show=true